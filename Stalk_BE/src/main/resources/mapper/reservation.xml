<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.Stalk.project.reservation.dao.ReservationMapper">

  <!-- ====== 예약 생성 관련 쿼리 ====== -->

  <!-- 전문가 존재 및 승인 여부 확인 -->
  <insert id="insertConsultationReservation">
    INSERT INTO consultation_sessions (user_id, advisor_id, date, start_time, end_time,
                                       request_message, status, created_at)
    VALUES (#{userId}, #{advisorUserId}, #{date}, #{startTime}, #{endTime},
            #{requestMessage}, 'PENDING', NOW())
  </insert>

  <!-- 전문가 차단 시간 확인 -->
  <insert id="createNotification">
    INSERT INTO notifications (user_id, type, title, message, related_id, is_read, created_at)
    VALUES (#{userId}, #{type}, #{title}, #{message}, #{relatedId}, 0, NOW())
  </insert>

  <!-- 기존 예약 존재 여부 확인 -->
  <select id="isApprovedAdvisor" resultType="Boolean">
    SELECT COUNT(*) > 0
    FROM advisor a
           INNER JOIN users u ON a.advisor_id = u.id
    WHERE a.advisor_id = #{advisorUserId}
      AND a.is_approved = 1
      AND u.id IS NOT NULL
  </select>

  <!-- 상담 예약 생성 -->
  <select id="isTimeBlocked" resultType="Boolean">
    SELECT COUNT(*) > 0
    FROM advisor_blocked_times abt
    WHERE abt.advisor_id = #{advisorUserId}
      AND abt.date = #{date}
      AND (#{startTime} <![CDATA[>=]]> abt.start_time AND #{startTime} <![CDATA[<]]> abt.end_time)
  </select>

  <!-- 마지막 생성된 예약 ID 조회 -->
  <select id="isTimeAlreadyReserved" resultType="Boolean">
    SELECT COUNT(*) > 0
    FROM consultation_sessions cs
    WHERE cs.advisor_id = #{advisorUserId}
      AND cs.date = #{date}
      AND cs.start_time = #{startTime}
      AND cs.status != 'CANCELED'
  </select>

  <!-- ====== 예약 조회 관련 쿼리 ====== -->

  <!-- 사용자 role 조회 -->
  <select id="getLastInsertId" resultType="Long">
    SELECT LAST_INSERT_ID()
  </select>

  <!-- 사용자 ID로 advisor_id 조회 -->
  <select id="getUserRole" resultType="String">
    SELECT role
    FROM users
    WHERE id = #{userId}
  </select>

  <!-- 전문가의 예약 내역 조회 (전문가용) -->
  <select id="getAdvisorIdByUserId" resultType="Long">
    SELECT advisor_id
    FROM advisor
    WHERE advisor_id = #{userId}
      AND is_approved = 1
  </select>

  <!-- 일반 사용자의 예약 내역 조회 (일반 사용자용) -->
  <select id="findAdvisorReservations"
    resultType="com.Stalk.project.reservation.dto.out.ReservationDetailResponseDto">
    SELECT cs.id                                                 as reservationId,
           cs.date                                               as consultationDate,
           TIME_FORMAT(cs.start_time, '%H:%i')                   as consultationTime,
           cs.request_message                                    as requestMessage,
           u.name                                                as clientName,
           u.id                                                  as clientUserId,
           cs.status,
           DATE_FORMAT(cs.created_at, '%Y-%m-%dT%H:%i:%s+09:00') as createdAt
    FROM consultation_sessions cs
           INNER JOIN users u ON cs.user_id = u.id
    WHERE cs.advisor_id = #{advisorId}
    ORDER BY cs.created_at DESC
      LIMIT #{pageRequest.limitPlusOne}
    OFFSET #{pageRequest.offset}
  </select>

  <!-- ====== 예약 취소 관련 쿼리 ====== -->

  <!-- 예약 상세 조회 (취소 가능 여부 확인용) -->
  <select id="findUserReservations"
    resultType="com.Stalk.project.reservation.dto.out.ReservationDetailResponseDto">
    SELECT cs.id                                                 as reservationId,
           cs.date                                               as consultationDate,
           TIME_FORMAT(cs.start_time, '%H:%i')                   as consultationTime,
           cs.request_message                                    as requestMessage,
           u.name                                                as advisorName,
           u.id                                                  as advisorUserId,
           a.profile_image_url                                   as profileImageUrl,
           cs.status,
           DATE_FORMAT(cs.created_at, '%Y-%m-%dT%H:%i:%s+09:00') as createdAt
    FROM consultation_sessions cs
           INNER JOIN advisor a ON cs.advisor_id = a.advisor_id
           INNER JOIN users u ON cs.advisor_id = u.id
    WHERE cs.user_id = #{userId}
    ORDER BY cs.created_at DESC
      LIMIT #{pageRequest.limitPlusOne}
    OFFSET #{pageRequest.offset}
  </select>

  <!-- 예약 취소 처리 -->
  <select id="findReservationForCancel"
    resultType="com.Stalk.project.reservation.dao.ReservationCancelCheckDto">
    SELECT cs.id,
           cs.user_id        as userId,
           cs.advisor_id     as advisorId,
           cs.date,
           cs.start_time     as startTime,
           cs.status,
           advisor_user.name as advisorName,
           client_user.name  as clientName
    FROM consultation_sessions cs
           INNER JOIN users advisor_user ON cs.advisor_id = advisor_user.id
           INNER JOIN users client_user ON cs.user_id = client_user.id
    WHERE cs.id = #{reservationId}
  </select>

  <!-- 알림 생성 -->
  <update id="cancelReservation">
    UPDATE consultation_sessions
    SET status        = 'CANCELED',
        canceled_by   = #{canceledBy},
        cancel_reason = #{cancelReason},
        cancel_memo   = #{cancelMemo},
        canceled_at   = #{canceledAt}
    WHERE id = #{reservationId}
  </update>

</mapper>